module terms/Terms

imports
 
  terms/Constants	
  common/Identifiers	
  terms/Vars	
  terms/StringQuotations
        
sorts Pattern

context-free syntax

  Pattern = <<Var>> 
  Pattern.Int = <<Int>> 
  Pattern.Real = <<Real>> 
  Pattern.Str = <<String>> 
  Pattern.Op = <<Id>(<{Pattern ", "}*>)> 
  Pattern.OpQ = <<String>(<{Pattern ", "}*>)> 
  Pattern.Char = <<Char>> 
  Pattern.Tuple = <(<{Pattern ", "}*>)> 
  Pattern.List = <[<{Pattern ", "}*>]>  
  Pattern.ListTail = <[<{Pattern ", "}*> | <Pattern>]> 
  Pattern.As = <<Var>@<Pattern>> 

sorts Term

context-free syntax

  Term = <<VarRef>> 
  Term.Int = <<Int>> 
  Term.Real = <<Real>> 
  Term.Str = <<String>> 
  Term.Op = <<Id>(<{Term ", "}*>)> 
  Term.OpQ = <<String>(<{Term ", "}*>)> 
  Term.Char = <<Char>> 
  Term.Tuple = <(<{Term ", "}*>)> 
  Term.List = <[<{Term ", "}*>]> 
  Term.ListTail = <[<{Term ", "}*> | <Term>]> 
  Term.StrInterp = <<PPTerm>> 
