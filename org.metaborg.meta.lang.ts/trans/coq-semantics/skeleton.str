module coq-semantics/skeleton

rules
  
    build-module(|language):
    sent_has_type -> |[
Require Import ident_sdf_mod.
Require Import ident_nabl_mod.
Require Import ts_nabl.

Module ident_ts.

  Module ident_nabl_mod := ident_nabl_gen. 
  Export ident_nabl_mod.
  Module ident_ts_mod := ident_ts_nabl_gen. 
  Export ident_ts_mod.

  Module ts_wf := TS_NaBL_def ident_sdf_gen ident_nabl_mod ident_ts_mod. 
  Import ts_wf.

Section With_term.
  Variable t : term.
  Variable def_of : key -> key -> Prop.

sent_has_type

End With_term.
End ident_ts.
      ]|
      where
        ident_language := language;
        ident_sdf      := $[SDF_[language]];
        ident_nabl     := $[NaBL_[language]];
        ident_ts       := $[TS_[language]];
        ident_sdf_mod  := $[SDF_[language]_mod];
        ident_nabl_mod := $[NaBL_[language]_mod];
        ident_ts_mod   := $[TS_[language]_mod];
        ident_sdf_gen  := $[SDF_[language]_gen];
        ident_nabl_gen := $[NaBL_[language]_gen];
        ident_ts_nabl_gen := $[TS_NaBL_[language]_gen]