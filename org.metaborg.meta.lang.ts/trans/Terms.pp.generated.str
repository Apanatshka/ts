module Terms.pp.generated

strategies
  prettyprint-Pattern :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a49]
           )
         ]
    where a49 := <pp-one-Z(prettyprint-Var)> a

  prettyprint-Pattern :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a50]
                )
              ]
    where a50 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Pattern :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a51]
                 )
               ]
    where a51 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Pattern :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a52]
                )
              ]
    where a52 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Pattern :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a53
                    , S("(")
                    , b31
                    , S(")")
                    ]
                  )
                ]
    where a53 := <pp-one-Z(prettyprint-Id)> a
    where b31 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a54
                     , S("(")
                     , b32
                     , S(")")
                     ]
                   )
                 ]
    where a54 := <pp-one-Z(prettyprint-String)> a
    where b32 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a55]
                 )
               ]
    where a55 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Pattern :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a56, S(")")]
                  )
                ]
    where a56 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a57, S("]")]
                 )
               ]
    where a57 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a58
                          , S(" | ")
                          , b33
                          , S("]")
                          ]
                        )
                      ]
    where a58 := <pp-H-list(prettyprint-Pattern|", ")> a
    where b33 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Pattern :
    As(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a59, S("@"), b34]
                  )
                ]
    where a59 := <pp-one-Z(prettyprint-Var)> a
    where b34 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Pattern


strategies
  prettyprint-Term :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a60]
           )
         ]
    where a60 := <pp-one-Z(prettyprint-VarRef)> a

  prettyprint-Term :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a61]
                )
              ]
    where a61 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Term :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a62]
                 )
               ]
    where a62 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Term :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a63]
                )
              ]
    where a63 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Term :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a64
                    , S("(")
                    , b35
                    , S(")")
                    ]
                  )
                ]
    where a64 := <pp-one-Z(prettyprint-Id)> a
    where b35 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a65
                     , S("(")
                     , b36
                     , S(")")
                     ]
                   )
                 ]
    where a65 := <pp-one-Z(prettyprint-String)> a
    where b36 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a66]
                 )
               ]
    where a66 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Term :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a67, S(")")]
                  )
                ]
    where a67 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a68, S("]")]
                 )
               ]
    where a68 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a69
                          , S(" | ")
                          , b37
                          , S("]")
                          ]
                        )
                      ]
    where a69 := <pp-H-list(prettyprint-Term|", ")> a
    where b37 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    StrInterp(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a70]
                      )
                    ]
    where a70 := <pp-one-Z(prettyprint-PPTerm)> a

  prettyprint-example =
    prettyprint-Term