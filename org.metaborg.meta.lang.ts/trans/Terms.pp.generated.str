module Terms.pp.generated

strategies
  prettyprint-Pattern :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a0]
           )
         ]
    where a0 := <pp-one-Z(prettyprint-Var)> a

  prettyprint-Pattern :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a1]
                )
              ]
    where a1 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Pattern :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a2]
                 )
               ]
    where a2 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Pattern :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a3]
                )
              ]
    where a3 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Pattern :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a4
                    , S("(")
                    , b0
                    , S(")")
                    ]
                  )
                ]
    where a4 := <pp-one-Z(prettyprint-Id)> a
    where b0 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a5
                     , S("(")
                     , b1
                     , S(")")
                     ]
                   )
                 ]
    where a5 := <pp-one-Z(prettyprint-String)> a
    where b1 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a6]
                 )
               ]
    where a6 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Pattern :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a7, S(")")]
                  )
                ]
    where a7 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a8, S("]")]
                 )
               ]
    where a8 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a9
                          , S(" | ")
                          , b2
                          , S("]")
                          ]
                        )
                      ]
    where a9 := <pp-H-list(prettyprint-Pattern|", ")> a
    where b2 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Pattern :
    As(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a10, S("@"), b3]
                  )
                ]
    where a10 := <pp-one-Z(prettyprint-Var)> a
    where b3 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Pattern


strategies
  prettyprint-Term :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a11]
           )
         ]
    where a11 := <pp-one-Z(prettyprint-VarRef)> a

  prettyprint-Term :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a12]
                )
              ]
    where a12 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Term :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a13]
                 )
               ]
    where a13 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Term :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a14]
                )
              ]
    where a14 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Term :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a15
                    , S("(")
                    , b4
                    , S(")")
                    ]
                  )
                ]
    where a15 := <pp-one-Z(prettyprint-Id)> a
    where b4 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a16
                     , S("(")
                     , b5
                     , S(")")
                     ]
                   )
                 ]
    where a16 := <pp-one-Z(prettyprint-String)> a
    where b5 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a17]
                 )
               ]
    where a17 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Term :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a18, S(")")]
                  )
                ]
    where a18 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a19, S("]")]
                 )
               ]
    where a19 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a20
                          , S(" | ")
                          , b6
                          , S("]")
                          ]
                        )
                      ]
    where a20 := <pp-H-list(prettyprint-Term|", ")> a
    where b6 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term