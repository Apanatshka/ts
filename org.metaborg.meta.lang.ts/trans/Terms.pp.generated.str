module Terms.pp.generated

strategies
  prettyprint-Pattern :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a105]
           )
         ]
    where a105 := <pp-one-Z(prettyprint-Var)> a

  prettyprint-Pattern :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a106]
                )
              ]
    where a106 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Pattern :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a107]
                 )
               ]
    where a107 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Pattern :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a108]
                )
              ]
    where a108 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Pattern :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a109
                    , S("(")
                    , b57
                    , S(")")
                    ]
                  )
                ]
    where a109 := <pp-one-Z(prettyprint-Id)> a
    where b57 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a110
                     , S("(")
                     , b58
                     , S(")")
                     ]
                   )
                 ]
    where a110 := <pp-one-Z(prettyprint-String)> a
    where b58 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a111]
                 )
               ]
    where a111 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Pattern :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a112, S(")")]
                  )
                ]
    where a112 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a113, S("]")]
                 )
               ]
    where a113 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a114
                          , S(" | ")
                          , b59
                          , S("]")
                          ]
                        )
                      ]
    where a114 := <pp-H-list(prettyprint-Pattern|", ")> a
    where b59 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Pattern :
    As(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a115, S("@"), b60]
                  )
                ]
    where a115 := <pp-one-Z(prettyprint-Var)> a
    where b60 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Pattern


strategies
  prettyprint-Term :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a116]
           )
         ]
    where a116 := <pp-one-Z(prettyprint-VarRef)> a

  prettyprint-Term :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a117]
                )
              ]
    where a117 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Term :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a118]
                 )
               ]
    where a118 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Term :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a119]
                )
              ]
    where a119 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Term :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a120
                    , S("(")
                    , b61
                    , S(")")
                    ]
                  )
                ]
    where a120 := <pp-one-Z(prettyprint-Id)> a
    where b61 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a121
                     , S("(")
                     , b62
                     , S(")")
                     ]
                   )
                 ]
    where a121 := <pp-one-Z(prettyprint-String)> a
    where b62 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a122]
                 )
               ]
    where a122 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Term :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a123, S(")")]
                  )
                ]
    where a123 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a124, S("]")]
                 )
               ]
    where a124 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a125
                          , S(" | ")
                          , b63
                          , S("]")
                          ]
                        )
                      ]
    where a125 := <pp-H-list(prettyprint-Term|", ")> a
    where b63 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    StrInterp(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a126]
                      )
                    ]
    where a126 := <pp-one-Z(prettyprint-PPTerm)> a

  prettyprint-example =
    prettyprint-Term