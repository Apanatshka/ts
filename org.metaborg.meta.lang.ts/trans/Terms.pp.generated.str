module Terms.pp.generated

strategies
  prettyprint-Pattern :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a52]
           )
         ]
    where a52 := <pp-one-Z(prettyprint-Var)> a

  prettyprint-Pattern :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a53]
                )
              ]
    where a53 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Pattern :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a54]
                 )
               ]
    where a54 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Pattern :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a55]
                )
              ]
    where a55 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Pattern :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a56
                    , S("(")
                    , b34
                    , S(")")
                    ]
                  )
                ]
    where a56 := <pp-one-Z(prettyprint-Id)> a
    where b34 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a57
                     , S("(")
                     , b35
                     , S(")")
                     ]
                   )
                 ]
    where a57 := <pp-one-Z(prettyprint-String)> a
    where b35 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a58]
                 )
               ]
    where a58 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Pattern :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a59, S(")")]
                  )
                ]
    where a59 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a60, S("]")]
                 )
               ]
    where a60 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a61
                          , S(" | ")
                          , b36
                          , S("]")
                          ]
                        )
                      ]
    where a61 := <pp-H-list(prettyprint-Pattern|", ")> a
    where b36 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Pattern :
    As(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a62, S("@"), b37]
                  )
                ]
    where a62 := <pp-one-Z(prettyprint-Var)> a
    where b37 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Pattern


strategies
  prettyprint-Term :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a63]
           )
         ]
    where a63 := <pp-one-Z(prettyprint-VarRef)> a

  prettyprint-Term :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a64]
                )
              ]
    where a64 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Term :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a65]
                 )
               ]
    where a65 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Term :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a66]
                )
              ]
    where a66 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Term :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a67
                    , S("(")
                    , b38
                    , S(")")
                    ]
                  )
                ]
    where a67 := <pp-one-Z(prettyprint-Id)> a
    where b38 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a68
                     , S("(")
                     , b39
                     , S(")")
                     ]
                   )
                 ]
    where a68 := <pp-one-Z(prettyprint-String)> a
    where b39 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a69]
                 )
               ]
    where a69 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Term :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a70, S(")")]
                  )
                ]
    where a70 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a71, S("]")]
                 )
               ]
    where a71 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a72
                          , S(" | ")
                          , b40
                          , S("]")
                          ]
                        )
                      ]
    where a72 := <pp-H-list(prettyprint-Term|", ")> a
    where b40 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term