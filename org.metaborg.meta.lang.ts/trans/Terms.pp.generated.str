module Terms.pp.generated

strategies
  prettyprint-Pattern :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a124]
           )
         ]
    where a124 := <pp-one-Z(prettyprint-Var)> a

  prettyprint-Pattern :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a125]
                )
              ]
    where a125 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Pattern :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a126]
                 )
               ]
    where a126 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Pattern :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a127]
                )
              ]
    where a127 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Pattern :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a128
                    , S("(")
                    , b70
                    , S(")")
                    ]
                  )
                ]
    where a128 := <pp-one-Z(prettyprint-Id)> a
    where b70 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a129
                     , S("(")
                     , b71
                     , S(")")
                     ]
                   )
                 ]
    where a129 := <pp-one-Z(prettyprint-String)> a
    where b71 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a130]
                 )
               ]
    where a130 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Pattern :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a131, S(")")]
                  )
                ]
    where a131 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a132, S("]")]
                 )
               ]
    where a132 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a133
                          , S(" | ")
                          , b72
                          , S("]")
                          ]
                        )
                      ]
    where a133 := <pp-H-list(prettyprint-Pattern|", ")> a
    where b72 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Pattern :
    As(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a134, S("@"), b73]
                  )
                ]
    where a134 := <pp-one-Z(prettyprint-Var)> a
    where b73 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Pattern


strategies
  prettyprint-Term :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a135]
           )
         ]
    where a135 := <pp-one-Z(prettyprint-VarRef)> a

  prettyprint-Term :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a136]
                )
              ]
    where a136 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Term :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a137]
                 )
               ]
    where a137 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Term :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a138]
                )
              ]
    where a138 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Term :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a139
                    , S("(")
                    , b74
                    , S(")")
                    ]
                  )
                ]
    where a139 := <pp-one-Z(prettyprint-Id)> a
    where b74 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a140
                     , S("(")
                     , b75
                     , S(")")
                     ]
                   )
                 ]
    where a140 := <pp-one-Z(prettyprint-String)> a
    where b75 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a141]
                 )
               ]
    where a141 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Term :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a142, S(")")]
                  )
                ]
    where a142 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a143, S("]")]
                 )
               ]
    where a143 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a144
                          , S(" | ")
                          , b76
                          , S("]")
                          ]
                        )
                      ]
    where a144 := <pp-H-list(prettyprint-Term|", ")> a
    where b76 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term