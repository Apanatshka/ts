module Terms.pp.generated

strategies
  prettyprint-Pattern :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a33]
           )
         ]
    where a33 := <pp-one-Z(prettyprint-Var)> a

  prettyprint-Pattern :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a34]
                )
              ]
    where a34 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Pattern :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a35]
                 )
               ]
    where a35 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Pattern :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a36]
                )
              ]
    where a36 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Pattern :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a37
                    , S("(")
                    , b20
                    , S(")")
                    ]
                  )
                ]
    where a37 := <pp-one-Z(prettyprint-Id)> a
    where b20 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a38
                     , S("(")
                     , b21
                     , S(")")
                     ]
                   )
                 ]
    where a38 := <pp-one-Z(prettyprint-String)> a
    where b21 := <pp-H-list(prettyprint-Pattern|", ")> b

  prettyprint-Pattern :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a39]
                 )
               ]
    where a39 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Pattern :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a40, S(")")]
                  )
                ]
    where a40 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a41, S("]")]
                 )
               ]
    where a41 := <pp-H-list(prettyprint-Pattern|", ")> a

  prettyprint-Pattern :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a42
                          , S(" | ")
                          , b22
                          , S("]")
                          ]
                        )
                      ]
    where a42 := <pp-H-list(prettyprint-Pattern|", ")> a
    where b22 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Pattern :
    As(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a43, S("@"), b23]
                  )
                ]
    where a43 := <pp-one-Z(prettyprint-Var)> a
    where b23 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Pattern


strategies
  prettyprint-Term :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a44]
           )
         ]
    where a44 := <pp-one-Z(prettyprint-VarRef)> a

  prettyprint-Term :
    Int(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a45]
                )
              ]
    where a45 := <pp-one-Z(prettyprint-Int)> a

  prettyprint-Term :
    Real(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a46]
                 )
               ]
    where a46 := <pp-one-Z(prettyprint-Real)> a

  prettyprint-Term :
    Str(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [a47]
                )
              ]
    where a47 := <pp-one-Z(prettyprint-String)> a

  prettyprint-Term :
    Op(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a48
                    , S("(")
                    , b24
                    , S(")")
                    ]
                  )
                ]
    where a48 := <pp-one-Z(prettyprint-Id)> a
    where b24 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    OpQ(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [ a49
                     , S("(")
                     , b25
                     , S(")")
                     ]
                   )
                 ]
    where a49 := <pp-one-Z(prettyprint-String)> a
    where b25 := <pp-H-list(prettyprint-Term|", ")> b

  prettyprint-Term :
    Char(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a50]
                 )
               ]
    where a50 := <pp-one-Z(prettyprint-Char)> a

  prettyprint-Term :
    Tuple(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("("), a51, S(")")]
                  )
                ]
    where a51 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    List(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("["), a52, S("]")]
                 )
               ]
    where a52 := <pp-H-list(prettyprint-Term|", ")> a

  prettyprint-Term :
    ListTail(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [ S("[")
                          , a53
                          , S(" | ")
                          , b26
                          , S("]")
                          ]
                        )
                      ]
    where a53 := <pp-H-list(prettyprint-Term|", ")> a
    where b26 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term