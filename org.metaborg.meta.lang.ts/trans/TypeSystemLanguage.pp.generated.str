module TypeSystemLanguage.pp.generated

strategies
  prettyprint-ModuleSection :
    TypeRules(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("type rules")]
                      )
                    , H(
                        []
                      , [S("")]
                      )
                    , a709
                    ]
    where a709 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TypeRule|"1")> a]

  prettyprint-TypeRule :
    TypeRuleUnCond(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a710]
                           )
                         ]
    where a710 := <pp-one-Z(prettyprint-PropPattern)> a

  prettyprint-TypeRule :
    TypeRule(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a711]
                        )
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("where "), b345]
                        )
                      ]
    where a711 := <pp-one-Z(prettyprint-PropPattern)> a
    where b345 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeRule


strategies
  prettyprint-Formula :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a712]
           )
         ]
    where a712 := <pp-one-Z(prettyprint-Prop)> a

  prettyprint-Formula :
    Else(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ a713
                         , S(" else error ")
                         , b346
                         , S(" on ")
                         , c102
                         ]
                       )
                     ]
    where a713 := <pp-one-Z(prettyprint-Formula)> a
    where b346 := <pp-one-Z(prettyprint-Term)> b
    where c102 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Formula :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("not "), a714]
                )
              ]
    where a714 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Formula :
    Or(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a715]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("or "), b347]
                  )
                ]
    where a715 := <pp-one-Z(prettyprint-Formula)> a
    where b347 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a716]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("and "), b348]
                   )
                 ]
    where a716 := <pp-one-Z(prettyprint-Formula)> a
    where b348 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Label(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a717, S(" :: "), b349]
                     )
                   ]
    where a717 := <pp-one-Z(prettyprint-LId)> a
    where b349 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a718, S(")")]
                          )
                        ]
    where a718 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Formula


strategies
  prettyprint-SubTypeOp =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-SubTypeOp


strategies
  prettyprint-Prop :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  prettyprint-Prop :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  prettyprint-Prop :
    HasType(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a719, S(" : "), b350]
                       )
                     ]
    where a719 := <pp-one-Z(prettyprint-Term)> a
    where b350 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Has(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a720
                        , S(" has ")
                        , b351
                        , S(" ")
                        , c103
                        ]
                      )
                    ]
    where a720 := <pp-one-Z(prettyprint-Term)> a
    where b351 := <pp-one-Z(prettyprint-Id)> b
    where c103 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-Prop :
    Eq(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a721, S(" == "), b352]
                  )
                ]
    where a721 := <pp-one-Z(prettyprint-Term)> a
    where b352 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Prop :
    Match(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a722, S(" => "), b353]
                     )
                   ]
    where a722 := <pp-one-Z(prettyprint-Term)> a
    where b353 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Prop


strategies
  prettyprint-PropPattern :
    HasTypePat(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a723, S(" : "), b354]
                          )
                        ]
    where a723 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b354 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-PropPattern :
    HasPat(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a724
                           , S(" has ")
                           , b355
                           , S(" ")
                           , c104
                           ]
                         )
                       ]
    where a724 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b355 := <pp-one-Z(prettyprint-Id)> b
    where c104 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-PropPattern :
    IsWF(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a725, S(" :-")]
                 )
               ]
    where a725 := <pp-H-list(prettyprint-Pattern|" + ")> a

  prettyprint-example =
    prettyprint-PropPattern


strategies
  prettyprint-Term :
    DefOf(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("definition of "), a726]
                  )
                ]
    where a726 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    Union(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a727, S(" union "), b356]
                     )
                   ]
    where a727 := <pp-one-Z(prettyprint-Term)> a
    where b356 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    Choice(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a728, S(" or "), b357]
                      )
                    ]
    where a728 := <pp-one-Z(prettyprint-Term)> a
    where b357 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term


strategies
  prettyprint-Id :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("where")]
            )
          ]

  prettyprint-example =
    prettyprint-Id