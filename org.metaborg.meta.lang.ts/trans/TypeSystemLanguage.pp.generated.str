module TypeSystemLanguage.pp.generated

strategies
  prettyprint-ModuleSection :
    TypeRules(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("type rules")]
                      )
                    , H(
                        []
                      , [S("")]
                      )
                    , a450
                    ]
    where a450 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TypeRule|"1")> a]

  prettyprint-TypeRule :
    TypeRuleUnCond(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a451]
                           )
                         ]
    where a451 := <pp-one-Z(prettyprint-PropPattern)> a

  prettyprint-TypeRule :
    TypeRule(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a452]
                        )
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("where "), b270]
                        )
                      ]
    where a452 := <pp-one-Z(prettyprint-PropPattern)> a
    where b270 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeRule


strategies
  prettyprint-Formula :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a453]
           )
         ]
    where a453 := <pp-one-Z(prettyprint-Prop)> a

  prettyprint-Formula :
    Else(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ a454
                         , S(" else error ")
                         , b271
                         , S(" on ")
                         , c62
                         ]
                       )
                     ]
    where a454 := <pp-one-Z(prettyprint-Formula)> a
    where b271 := <pp-one-Z(prettyprint-Term)> b
    where c62 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Formula :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("not "), a455]
                )
              ]
    where a455 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Formula :
    Or(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a456]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("or "), b272]
                  )
                ]
    where a456 := <pp-one-Z(prettyprint-Formula)> a
    where b272 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a457]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("and "), b273]
                   )
                 ]
    where a457 := <pp-one-Z(prettyprint-Formula)> a
    where b273 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Label(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a458, S(" :: "), b274]
                     )
                   ]
    where a458 := <pp-one-Z(prettyprint-LId)> a
    where b274 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a459, S(")")]
                          )
                        ]
    where a459 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Formula


strategies
  prettyprint-Formula :
    Is(a) -> [ H(
                 [SOpt(HS(), "0")]
               , [S("["), a460, S("]")]
               )
             ]
    where a460 := <pp-V-list(prettyprint-Instruction)> a

  prettyprint-Instruction :
    I(a) -> [ H(
                [SOpt(HS(), "0")]
              , [a461, S(";")]
              )
            ]
    where a461 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Instruction :
    Id(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a462
                    , S(" provided ")
                    , b275
                    , S(";")
                    ]
                  )
                ]
    where a462 := <pp-one-Z(prettyprint-Formula)> a
    where b275 := <pp-one-Z(prettyprint-VarRef)> b

  prettyprint-Instruction :
    Ia(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a463
                    , S(" := ")
                    , b276
                    , S(";")
                    ]
                  )
                ]
    where a463 := <pp-one-Z(prettyprint-Var)> a
    where b276 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Instruction :
    Iad(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a464
                        , S(" := ")
                        , b277
                        , S(" provided ")
                        , c63
                        , S(";")
                        ]
                      )
                    ]
    where a464 := <pp-one-Z(prettyprint-Var)> a
    where b277 := <pp-one-Z(prettyprint-Formula)> b
    where c63 := <pp-one-Z(prettyprint-VarRef)> c

  prettyprint-example =
    prettyprint-Formula

  prettyprint-example =
    prettyprint-Instruction


strategies
  prettyprint-Prop :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  prettyprint-Prop :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  prettyprint-Prop :
    HasType(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a465, S(" : "), b278]
                       )
                     ]
    where a465 := <pp-one-Z(prettyprint-Term)> a
    where b278 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Has(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a466
                        , S(" has ")
                        , b279
                        , S(" ")
                        , c64
                        ]
                      )
                    ]
    where a466 := <pp-one-Z(prettyprint-Term)> a
    where b279 := <pp-one-Z(prettyprint-Id)> b
    where c64 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-Prop :
    Eq(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a467, S(" == "), b280]
                  )
                ]
    where a467 := <pp-one-Z(prettyprint-Term)> a
    where b280 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Prop :
    Match(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a468, S(" => "), b281]
                     )
                   ]
    where a468 := <pp-one-Z(prettyprint-Term)> a
    where b281 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Bind(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a469, S(" bind "), b282]
                    )
                  ]
    where a469 := <pp-one-Z(prettyprint-Term)> a
    where b282 := <pp-one-Z(prettyprint-Var)> b

  prettyprint-Prop :
    Project(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a470, S(" project "), b283]
                       )
                     ]
    where a470 := <pp-one-Z(prettyprint-VarRef)> a
    where b283 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Return(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("return "), a471]
                   )
                 ]
    where a471 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-example =
    prettyprint-Prop


strategies
  prettyprint-PropPattern :
    HasTypePat(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a472, S(" : "), b284]
                          )
                        ]
    where a472 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b284 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-PropPattern :
    HasPat(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a473
                           , S(" has ")
                           , b285
                           , S(" ")
                           , c65
                           ]
                         )
                       ]
    where a473 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b285 := <pp-one-Z(prettyprint-Id)> b
    where c65 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-PropPattern :
    IsWF(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a474, S(" :-")]
                 )
               ]
    where a474 := <pp-H-list(prettyprint-Pattern|" + ")> a

  prettyprint-example =
    prettyprint-PropPattern


strategies
  prettyprint-Term :
    DefOf(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("definition of "), a475]
                  )
                ]
    where a475 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    Union(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a476, S(" union "), b286]
                     )
                   ]
    where a476 := <pp-one-Z(prettyprint-Term)> a
    where b286 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    Choice(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a477, S(" or "), b287]
                      )
                    ]
    where a477 := <pp-one-Z(prettyprint-Term)> a
    where b287 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term


strategies
  prettyprint-Id :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("where")]
            )
          ]

  prettyprint-example =
    prettyprint-Id