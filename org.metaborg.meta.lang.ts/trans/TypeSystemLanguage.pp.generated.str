module TypeSystemLanguage.pp.generated

strategies
  prettyprint-ModuleSection :
    TypeRules(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("type rules")]
                      )
                    , H(
                        []
                      , [S("")]
                      )
                    , a30
                    ]
    where a30 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TypeRule|"1")> a]

  prettyprint-TypeRule :
    TypeRuleUnCond(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a31]
                           )
                         ]
    where a31 := <pp-one-Z(prettyprint-PropPattern)> a

  prettyprint-TypeRule :
    TypeRule(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a32]
                        )
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("where "), b8]
                        )
                      ]
    where a32 := <pp-one-Z(prettyprint-PropPattern)> a
    where b8 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeRule


strategies
  prettyprint-Formula :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a33]
           )
         ]
    where a33 := <pp-one-Z(prettyprint-Prop)> a

  prettyprint-Formula :
    Else(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ a34
                         , S(" else error ")
                         , b9
                         , S(" on ")
                         , c6
                         ]
                       )
                     ]
    where a34 := <pp-one-Z(prettyprint-Formula)> a
    where b9 := <pp-one-Z(prettyprint-Term)> b
    where c6 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Formula :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("not "), a35]
                )
              ]
    where a35 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Formula :
    Or(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a36]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("or "), b10]
                  )
                ]
    where a36 := <pp-one-Z(prettyprint-Formula)> a
    where b10 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a37]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("and "), b22]
                   )
                 ]
    where a37 := <pp-one-Z(prettyprint-Formula)> a
    where b22 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Label(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a38, S(" :: "), b23]
                     )
                   ]
    where a38 := <pp-one-Z(prettyprint-LId)> a
    where b23 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a39, S(")")]
                          )
                        ]
    where a39 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Formula


strategies
  prettyprint-SubTypeOp =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-SubTypeOp


strategies
  prettyprint-Prop :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  prettyprint-Prop :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  prettyprint-Prop :
    HasType(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a40, S(" : "), b24]
                       )
                     ]
    where a40 := <pp-one-Z(prettyprint-Term)> a
    where b24 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    SubType(a, b, c) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ a41
                            , S(" ")
                            , b25
                            , S(" ")
                            , c7
                            ]
                          )
                        ]
    where a41 := <pp-one-Z(prettyprint-Term)> a
    where b25 := <pp-one-Z(prettyprint-SubTypeOp)> b
    where c7 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Prop :
    StoreSubType(a, b, c) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [ S("store ")
                                 , a42
                                 , S(" ")
                                 , b26
                                 , S(" ")
                                 , c8
                                 ]
                               )
                             ]
    where a42 := <pp-one-Z(prettyprint-Term)> a
    where b26 := <pp-one-Z(prettyprint-SubTypeOp)> b
    where c8 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Prop :
    Has(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a43
                        , S(" has ")
                        , b27
                        , S(" ")
                        , c9
                        ]
                      )
                    ]
    where a43 := <pp-one-Z(prettyprint-Term)> a
    where b27 := <pp-one-Z(prettyprint-Id)> b
    where c9 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-Prop :
    Eq(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a44, S(" == "), b28]
                  )
                ]
    where a44 := <pp-one-Z(prettyprint-Term)> a
    where b28 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Prop :
    Match(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a45, S(" => "), b29]
                     )
                   ]
    where a45 := <pp-one-Z(prettyprint-Term)> a
    where b29 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Prop


strategies
  prettyprint-PropPattern :
    HasTypePat(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a46, S(" : "), b30]
                          )
                        ]
    where a46 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b30 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-PropPattern :
    SubTypePat(a, b, c) -> [ H(
                               [SOpt(HS(), "0")]
                             , [ a47
                               , S(" ")
                               , b31
                               , S(" ")
                               , c10
                               ]
                             )
                           ]
    where a47 := <pp-one-Z(prettyprint-Pattern)> a
    where b31 := <pp-one-Z(prettyprint-SubTypeOp)> b
    where c10 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-PropPattern :
    HasPat(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a48
                           , S(" has ")
                           , b32
                           , S(" ")
                           , c11
                           ]
                         )
                       ]
    where a48 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b32 := <pp-one-Z(prettyprint-Id)> b
    where c11 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-PropPattern :
    IsWF(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a49, S(" :-")]
                 )
               ]
    where a49 := <pp-H-list(prettyprint-Pattern|" + ")> a

  prettyprint-example =
    prettyprint-PropPattern


strategies
  prettyprint-Term :
    DefOf(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("definition of "), a50]
                  )
                ]
    where a50 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    Combine(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a51, S(" or "), b33]
                       )
                     ]
    where a51 := <pp-one-Z(prettyprint-Term)> a
    where b33 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term


strategies
  prettyprint-Id :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("where")]
            )
          ]

  prettyprint-example =
    prettyprint-Id