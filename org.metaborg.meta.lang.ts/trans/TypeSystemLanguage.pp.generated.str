module TypeSystemLanguage.pp.generated

strategies
  prettyprint-ModuleSection :
    TypeRules(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("type rules")]
                      )
                    , H(
                        []
                      , [S("")]
                      )
                    , a374
                    ]
    where a374 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TypeRule|"1")> a]

  prettyprint-TypeRule :
    TypeRuleUnCond(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a375]
                           )
                         ]
    where a375 := <pp-one-Z(prettyprint-PropPattern)> a

  prettyprint-TypeRule :
    TypeRule(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a376]
                        )
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("where "), b232]
                        )
                      ]
    where a376 := <pp-one-Z(prettyprint-PropPattern)> a
    where b232 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeRule


strategies
  prettyprint-Formula :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a377]
           )
         ]
    where a377 := <pp-one-Z(prettyprint-Prop)> a

  prettyprint-Formula :
    Else(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ a378
                         , S(" else error ")
                         , b233
                         , S(" on ")
                         , c52
                         ]
                       )
                     ]
    where a378 := <pp-one-Z(prettyprint-Formula)> a
    where b233 := <pp-one-Z(prettyprint-Term)> b
    where c52 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Formula :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("not "), a379]
                )
              ]
    where a379 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Formula :
    Or(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a380]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("or "), b234]
                  )
                ]
    where a380 := <pp-one-Z(prettyprint-Formula)> a
    where b234 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a381]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("and "), b235]
                   )
                 ]
    where a381 := <pp-one-Z(prettyprint-Formula)> a
    where b235 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Label(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a382, S(" :: "), b236]
                     )
                   ]
    where a382 := <pp-one-Z(prettyprint-LId)> a
    where b236 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a383, S(")")]
                          )
                        ]
    where a383 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Formula


strategies
  prettyprint-Formula :
    Is(a) -> [ H(
                 [SOpt(HS(), "0")]
               , [S("["), a384, S("]")]
               )
             ]
    where a384 := <pp-V-list(prettyprint-Instruction)> a

  prettyprint-Instruction :
    I(a) -> [ H(
                [SOpt(HS(), "0")]
              , [a385, S(";")]
              )
            ]
    where a385 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Instruction :
    Id(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a386
                    , S(" provided ")
                    , b237
                    , S(";")
                    ]
                  )
                ]
    where a386 := <pp-one-Z(prettyprint-Formula)> a
    where b237 := <pp-one-Z(prettyprint-VarRef)> b

  prettyprint-Instruction :
    Ia(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a387
                    , S(" := ")
                    , b238
                    , S(";")
                    ]
                  )
                ]
    where a387 := <pp-one-Z(prettyprint-Var)> a
    where b238 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Instruction :
    Iad(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a388
                        , S(" := ")
                        , b239
                        , S(" provided ")
                        , c53
                        , S(";")
                        ]
                      )
                    ]
    where a388 := <pp-one-Z(prettyprint-Var)> a
    where b239 := <pp-one-Z(prettyprint-Formula)> b
    where c53 := <pp-one-Z(prettyprint-VarRef)> c

  prettyprint-example =
    prettyprint-Formula

  prettyprint-example =
    prettyprint-Instruction


strategies
  prettyprint-Prop :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  prettyprint-Prop :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  prettyprint-Prop :
    HasType(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a389, S(" : "), b240]
                       )
                     ]
    where a389 := <pp-one-Z(prettyprint-Term)> a
    where b240 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Has(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a390
                        , S(" has ")
                        , b241
                        , S(" ")
                        , c54
                        ]
                      )
                    ]
    where a390 := <pp-one-Z(prettyprint-Term)> a
    where b241 := <pp-one-Z(prettyprint-Id)> b
    where c54 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-Prop :
    Eq(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a391, S(" == "), b242]
                  )
                ]
    where a391 := <pp-one-Z(prettyprint-Term)> a
    where b242 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Prop :
    Match(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a392, S(" => "), b243]
                     )
                   ]
    where a392 := <pp-one-Z(prettyprint-Term)> a
    where b243 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Bind(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a393, S(" bind "), b244]
                    )
                  ]
    where a393 := <pp-one-Z(prettyprint-Term)> a
    where b244 := <pp-one-Z(prettyprint-Var)> b

  prettyprint-Prop :
    Project(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a394, S(" project "), b245]
                       )
                     ]
    where a394 := <pp-one-Z(prettyprint-VarRef)> a
    where b245 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Return(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("return "), a395]
                   )
                 ]
    where a395 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-example =
    prettyprint-Prop


strategies
  prettyprint-PropPattern :
    HasTypePat(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a396, S(" : "), b246]
                          )
                        ]
    where a396 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b246 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-PropPattern :
    HasPat(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a397
                           , S(" has ")
                           , b247
                           , S(" ")
                           , c55
                           ]
                         )
                       ]
    where a397 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b247 := <pp-one-Z(prettyprint-Id)> b
    where c55 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-PropPattern :
    IsWF(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a398, S(" :-")]
                 )
               ]
    where a398 := <pp-H-list(prettyprint-Pattern|" + ")> a

  prettyprint-example =
    prettyprint-PropPattern


strategies
  prettyprint-Term :
    DefOf(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("definition of "), a399]
                  )
                ]
    where a399 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    Union(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a400, S(" union "), b248]
                     )
                   ]
    where a400 := <pp-one-Z(prettyprint-Term)> a
    where b248 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    Choice(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a401, S(" or "), b249]
                      )
                    ]
    where a401 := <pp-one-Z(prettyprint-Term)> a
    where b249 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term


strategies
  prettyprint-Id :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("where")]
            )
          ]

  prettyprint-example =
    prettyprint-Id