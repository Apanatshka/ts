module TypeSystemLanguage.pp.generated

strategies
  prettyprint-ModuleSection :
    TypeRules(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("type rules")]
                      )
                    , H(
                        []
                      , [S("")]
                      )
                    , a441
                    ]
    where a441 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TypeRule|"1")> a]

  prettyprint-TypeRule :
    TypeRuleUnCond(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a442]
                           )
                         ]
    where a442 := <pp-one-Z(prettyprint-PropPattern)> a

  prettyprint-TypeRule :
    TypeRule(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a443]
                        )
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("where "), b215]
                        )
                      ]
    where a443 := <pp-one-Z(prettyprint-PropPattern)> a
    where b215 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeRule


strategies
  prettyprint-Formula :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a444]
           )
         ]
    where a444 := <pp-one-Z(prettyprint-Prop)> a

  prettyprint-Formula :
    Else(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ a445
                         , S(" else error ")
                         , b216
                         , S(" on ")
                         , c6
                         ]
                       )
                     ]
    where a445 := <pp-one-Z(prettyprint-Formula)> a
    where b216 := <pp-one-Z(prettyprint-Term)> b
    where c6 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Formula :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("not "), a446]
                )
              ]
    where a446 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Formula :
    Or(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a447]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("or "), b217]
                  )
                ]
    where a447 := <pp-one-Z(prettyprint-Formula)> a
    where b217 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a448]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("and "), b218]
                   )
                 ]
    where a448 := <pp-one-Z(prettyprint-Formula)> a
    where b218 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Label(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a449, S(" :: "), b219]
                     )
                   ]
    where a449 := <pp-one-Z(prettyprint-LId)> a
    where b219 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a450, S(")")]
                          )
                        ]
    where a450 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Formula


strategies
  prettyprint-SubTypeOp =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-SubTypeOp


strategies
  prettyprint-Prop :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  prettyprint-Prop :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  prettyprint-Prop :
    HasType(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a451, S(" : "), b220]
                       )
                     ]
    where a451 := <pp-one-Z(prettyprint-Term)> a
    where b220 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Has(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a452
                        , S(" has ")
                        , b221
                        , S(" ")
                        , c7
                        ]
                      )
                    ]
    where a452 := <pp-one-Z(prettyprint-Term)> a
    where b221 := <pp-one-Z(prettyprint-Id)> b
    where c7 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-Prop :
    Eq(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a453, S(" == "), b222]
                  )
                ]
    where a453 := <pp-one-Z(prettyprint-Term)> a
    where b222 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Prop :
    Match(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a454, S(" => "), b223]
                     )
                   ]
    where a454 := <pp-one-Z(prettyprint-Term)> a
    where b223 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Prop


strategies
  prettyprint-PropPattern :
    HasTypePat(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a455, S(" : "), b224]
                          )
                        ]
    where a455 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b224 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-PropPattern :
    HasPat(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a456
                           , S(" has ")
                           , b225
                           , S(" ")
                           , c8
                           ]
                         )
                       ]
    where a456 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b225 := <pp-one-Z(prettyprint-Id)> b
    where c8 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-PropPattern :
    IsWF(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a457, S(" :-")]
                 )
               ]
    where a457 := <pp-H-list(prettyprint-Pattern|" + ")> a

  prettyprint-example =
    prettyprint-PropPattern


strategies
  prettyprint-Term :
    DefOf(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("definition of "), a458]
                  )
                ]
    where a458 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    Union(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a459, S(" union "), b226]
                     )
                   ]
    where a459 := <pp-one-Z(prettyprint-Term)> a
    where b226 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    Choice(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a460, S(" or "), b227]
                      )
                    ]
    where a460 := <pp-one-Z(prettyprint-Term)> a
    where b227 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term


strategies
  prettyprint-Id :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("where")]
            )
          ]

  prettyprint-example =
    prettyprint-Id