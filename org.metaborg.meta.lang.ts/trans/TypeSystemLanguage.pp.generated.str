module TypeSystemLanguage.pp.generated

strategies
  prettyprint-ModuleSection :
    TypeRules(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("type rules")]
                      )
                    , H(
                        []
                      , [S("")]
                      )
                    , a305
                    ]
    where a305 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TypeRule|"1")> a]

  prettyprint-TypeRule :
    TypeRuleUnCond(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a306]
                           )
                         ]
    where a306 := <pp-one-Z(prettyprint-PropPattern)> a

  prettyprint-TypeRule :
    TypeRule(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a307]
                        )
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("where "), b149]
                        )
                      ]
    where a307 := <pp-one-Z(prettyprint-PropPattern)> a
    where b149 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeRule


strategies
  prettyprint-Formula :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a308]
           )
         ]
    where a308 := <pp-one-Z(prettyprint-Prop)> a

  prettyprint-Formula :
    Else(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ a309
                         , S(" else error ")
                         , b150
                         , S(" on ")
                         , c6
                         ]
                       )
                     ]
    where a309 := <pp-one-Z(prettyprint-Formula)> a
    where b150 := <pp-one-Z(prettyprint-Term)> b
    where c6 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Formula :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("not "), a310]
                )
              ]
    where a310 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Formula :
    Or(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a311]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("or "), b151]
                  )
                ]
    where a311 := <pp-one-Z(prettyprint-Formula)> a
    where b151 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a312]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("and "), b152]
                   )
                 ]
    where a312 := <pp-one-Z(prettyprint-Formula)> a
    where b152 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Label(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a313, S(" :: "), b153]
                     )
                   ]
    where a313 := <pp-one-Z(prettyprint-LId)> a
    where b153 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a314, S(")")]
                          )
                        ]
    where a314 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Formula


strategies
  prettyprint-SubTypeOp =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-SubTypeOp


strategies
  prettyprint-Prop :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  prettyprint-Prop :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  prettyprint-Prop :
    HasType(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a315, S(" : "), b154]
                       )
                     ]
    where a315 := <pp-one-Z(prettyprint-Term)> a
    where b154 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Has(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a316
                        , S(" has ")
                        , b155
                        , S(" ")
                        , c7
                        ]
                      )
                    ]
    where a316 := <pp-one-Z(prettyprint-Term)> a
    where b155 := <pp-one-Z(prettyprint-Id)> b
    where c7 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-Prop :
    Eq(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a317, S(" == "), b156]
                  )
                ]
    where a317 := <pp-one-Z(prettyprint-Term)> a
    where b156 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Prop :
    Match(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a318, S(" => "), b157]
                     )
                   ]
    where a318 := <pp-one-Z(prettyprint-Term)> a
    where b157 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-example =
    prettyprint-Prop


strategies
  prettyprint-PropPattern :
    HasTypePat(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a319, S(" : "), b158]
                          )
                        ]
    where a319 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b158 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-PropPattern :
    HasPat(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a320
                           , S(" has ")
                           , b159
                           , S(" ")
                           , c8
                           ]
                         )
                       ]
    where a320 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b159 := <pp-one-Z(prettyprint-Id)> b
    where c8 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-PropPattern :
    IsWF(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a321, S(" :-")]
                 )
               ]
    where a321 := <pp-H-list(prettyprint-Pattern|" + ")> a

  prettyprint-example =
    prettyprint-PropPattern


strategies
  prettyprint-Term :
    DefOf(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("definition of "), a322]
                  )
                ]
    where a322 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    Union(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a323, S(" union "), b160]
                     )
                   ]
    where a323 := <pp-one-Z(prettyprint-Term)> a
    where b160 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    Choice(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a324, S(" or "), b161]
                      )
                    ]
    where a324 := <pp-one-Z(prettyprint-Term)> a
    where b161 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term


strategies
  prettyprint-Id :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("where")]
            )
          ]

  prettyprint-example =
    prettyprint-Id