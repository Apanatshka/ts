module TypeSystemLanguage.pp.generated

strategies
  prettyprint-ModuleSection :
    TypeRules(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("type rules")]
                      )
                    , H(
                        []
                      , [S("")]
                      )
                    , a456
                    ]
    where a456 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TypeRule|"1")> a]

  prettyprint-TypeRule :
    TypeRuleUnCond(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a457]
                           )
                         ]
    where a457 := <pp-one-Z(prettyprint-PropPattern)> a

  prettyprint-TypeRule :
    TypeRule(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a458]
                        )
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("where "), b242]
                        )
                      ]
    where a458 := <pp-one-Z(prettyprint-PropPattern)> a
    where b242 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeRule


strategies
  prettyprint-Formula :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a459]
           )
         ]
    where a459 := <pp-one-Z(prettyprint-Prop)> a

  prettyprint-Formula :
    Else(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ a460
                         , S(" else error ")
                         , b243
                         , S(" on ")
                         , c61
                         ]
                       )
                     ]
    where a460 := <pp-one-Z(prettyprint-Formula)> a
    where b243 := <pp-one-Z(prettyprint-Term)> b
    where c61 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Formula :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("not "), a461]
                )
              ]
    where a461 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Formula :
    Or(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a462]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("or "), b244]
                  )
                ]
    where a462 := <pp-one-Z(prettyprint-Formula)> a
    where b244 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a463]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("and "), b245]
                   )
                 ]
    where a463 := <pp-one-Z(prettyprint-Formula)> a
    where b245 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Label(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a464, S(" :: "), b246]
                     )
                   ]
    where a464 := <pp-one-Z(prettyprint-LId)> a
    where b246 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a465, S(")")]
                          )
                        ]
    where a465 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Formula


strategies
  prettyprint-Formula :
    Is(a) -> [ H(
                 [SOpt(HS(), "0")]
               , [S("["), a466, S("]")]
               )
             ]
    where a466 := <pp-V-list(prettyprint-Instruction)> a

  prettyprint-Instruction :
    I(a) -> [ H(
                [SOpt(HS(), "0")]
              , [a467, S(";")]
              )
            ]
    where a467 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Instruction :
    Id(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a468
                    , S(" provided ")
                    , b247
                    , S(";")
                    ]
                  )
                ]
    where a468 := <pp-one-Z(prettyprint-Formula)> a
    where b247 := <pp-one-Z(prettyprint-VarRef)> b

  prettyprint-Instruction :
    Ia(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a469
                    , S(" := ")
                    , b248
                    , S(";")
                    ]
                  )
                ]
    where a469 := <pp-one-Z(prettyprint-Var)> a
    where b248 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Instruction :
    Iad(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a470
                        , S(" := ")
                        , b249
                        , S(" provided ")
                        , c62
                        , S(";")
                        ]
                      )
                    ]
    where a470 := <pp-one-Z(prettyprint-Var)> a
    where b249 := <pp-one-Z(prettyprint-Formula)> b
    where c62 := <pp-one-Z(prettyprint-VarRef)> c

  prettyprint-example =
    prettyprint-Formula

  prettyprint-example =
    prettyprint-Instruction


strategies
  prettyprint-Prop :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  prettyprint-Prop :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  prettyprint-Prop :
    HasType(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a471, S(" : "), b250]
                       )
                     ]
    where a471 := <pp-one-Z(prettyprint-Term)> a
    where b250 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Has(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a472
                        , S(" has ")
                        , b251
                        , S(" ")
                        , c63
                        ]
                      )
                    ]
    where a472 := <pp-one-Z(prettyprint-Term)> a
    where b251 := <pp-one-Z(prettyprint-Id)> b
    where c63 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-Prop :
    Eq(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a473, S(" == "), b252]
                  )
                ]
    where a473 := <pp-one-Z(prettyprint-Term)> a
    where b252 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Prop :
    Match(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a474, S(" => "), b253]
                     )
                   ]
    where a474 := <pp-one-Z(prettyprint-Term)> a
    where b253 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Bind(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a475, S(" bind "), b254]
                    )
                  ]
    where a475 := <pp-one-Z(prettyprint-Term)> a
    where b254 := <pp-one-Z(prettyprint-Var)> b

  prettyprint-Prop :
    Project(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a476, S(" project "), b255]
                       )
                     ]
    where a476 := <pp-one-Z(prettyprint-VarRef)> a
    where b255 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Return(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("return "), a477]
                   )
                 ]
    where a477 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-example =
    prettyprint-Prop


strategies
  prettyprint-PropPattern :
    HasTypePat(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a478, S(" : "), b256]
                          )
                        ]
    where a478 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b256 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-PropPattern :
    HasPat(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a479
                           , S(" has ")
                           , b257
                           , S(" ")
                           , c64
                           ]
                         )
                       ]
    where a479 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b257 := <pp-one-Z(prettyprint-Id)> b
    where c64 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-PropPattern :
    IsWF(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a480, S(" :-")]
                 )
               ]
    where a480 := <pp-H-list(prettyprint-Pattern|" + ")> a

  prettyprint-example =
    prettyprint-PropPattern


strategies
  prettyprint-Term :
    DefOf(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("definition of "), a481]
                  )
                ]
    where a481 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    Choice(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a482, S(" or "), b258]
                      )
                    ]
    where a482 := <pp-one-Z(prettyprint-Term)> a
    where b258 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    Union(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a483, S(" union "), b259]
                     )
                   ]
    where a483 := <pp-one-Z(prettyprint-Term)> a
    where b259 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term


strategies
  prettyprint-Id :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("where")]
            )
          ]

  prettyprint-example =
    prettyprint-Id