module TypeSystemLanguage.pp.generated

strategies
  prettyprint-ModuleSection :
    TypeRules(a) -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("type rules")]
                      )
                    , H(
                        []
                      , [S("")]
                      )
                    , a5688
                    ]
    where a5688 := <pp-indent(|"2")> [<pp-V-list(prettyprint-TypeRule|"1")> a]

  prettyprint-TypeRule :
    TypeRuleUnCond(a) -> [ H(
                             [SOpt(HS(), "0")]
                           , [a5689]
                           )
                         ]
    where a5689 := <pp-one-Z(prettyprint-PropPattern)> a

  prettyprint-TypeRule :
    TypeRule(a, b) -> [ H(
                          [SOpt(HS(), "0")]
                        , [a5690]
                        )
                      , H(
                          [SOpt(HS(), "0")]
                        , [S("where "), b2911]
                        )
                      ]
    where a5690 := <pp-one-Z(prettyprint-PropPattern)> a
    where b2911 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeRule


strategies
  prettyprint-Formula :
    a -> [ H(
             [SOpt(HS(), "0")]
           , [a5691]
           )
         ]
    where a5691 := <pp-one-Z(prettyprint-Prop)> a

  prettyprint-Formula :
    Else(a, b, c) -> [ H(
                         [SOpt(HS(), "0")]
                       , [ a5692
                         , S(" else error ")
                         , b2912
                         , S(" on ")
                         , c796
                         ]
                       )
                     ]
    where a5692 := <pp-one-Z(prettyprint-Formula)> a
    where b2912 := <pp-one-Z(prettyprint-Term)> b
    where c796 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-Formula :
    Not(a) -> [ H(
                  [SOpt(HS(), "0")]
                , [S("not "), a5693]
                )
              ]
    where a5693 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Formula :
    Or(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a5694]
                  )
                , H(
                    [SOpt(HS(), "0")]
                  , [S("or "), b2913]
                  )
                ]
    where a5694 := <pp-one-Z(prettyprint-Formula)> a
    where b2913 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Par(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a5695]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("par "), b2914]
                   )
                 ]
    where a5695 := <pp-one-Z(prettyprint-Formula)> a
    where b2914 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    And(a, b) -> [ H(
                     [SOpt(HS(), "0")]
                   , [a5696]
                   )
                 , H(
                     [SOpt(HS(), "0")]
                   , [S("and "), b2915]
                   )
                 ]
    where a5696 := <pp-one-Z(prettyprint-Formula)> a
    where b2915 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Label(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a5697, S(" :: "), b2916]
                     )
                   ]
    where a5697 := <pp-one-Z(prettyprint-LId)> a
    where b2916 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Formula :
    Parenthetical(a) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("("), a5698, S(")")]
                          )
                        ]
    where a5698 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-example =
    prettyprint-Formula


strategies
  prettyprint-Formula :
    Is(a) -> [ H(
                 [SOpt(HS(), "0")]
               , [S("["), a5699, S("]")]
               )
             ]
    where a5699 := <pp-V-list(prettyprint-Instruction)> a

  prettyprint-Instruction :
    I(a) -> [ H(
                [SOpt(HS(), "0")]
              , [a5700, S(";")]
              )
            ]
    where a5700 := <pp-one-Z(prettyprint-Formula)> a

  prettyprint-Instruction :
    Id(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a5701
                    , S(" provided ")
                    , b2917
                    , S(";")
                    ]
                  )
                ]
    where a5701 := <pp-one-Z(prettyprint-Formula)> a
    where b2917 := <pp-one-Z(prettyprint-VarRef)> b

  prettyprint-Instruction :
    Ia(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [ a5702
                    , S(" := ")
                    , b2918
                    , S(";")
                    ]
                  )
                ]
    where a5702 := <pp-one-Z(prettyprint-Var)> a
    where b2918 := <pp-one-Z(prettyprint-Formula)> b

  prettyprint-Instruction :
    Iad(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a5703
                        , S(" := ")
                        , b2919
                        , S(" provided ")
                        , c797
                        , S(";")
                        ]
                      )
                    ]
    where a5703 := <pp-one-Z(prettyprint-Var)> a
    where b2919 := <pp-one-Z(prettyprint-Formula)> b
    where c797 := <pp-one-Z(prettyprint-VarRef)> c

  prettyprint-example =
    prettyprint-Formula

  prettyprint-example =
    prettyprint-Instruction


strategies
  prettyprint-SubTypeOp =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-SubTypeOp


strategies
  prettyprint-Prop :
    True() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("true")]
                )
              ]

  prettyprint-Prop :
    False() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("false")]
                 )
               ]

  prettyprint-Prop :
    HasType(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a5704, S(" : "), b2920]
                       )
                     ]
    where a5704 := <pp-one-Z(prettyprint-Term)> a
    where b2920 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Has(a, b, c) -> [ H(
                        [SOpt(HS(), "0")]
                      , [ a5705
                        , S(" has ")
                        , b2921
                        , S(" ")
                        , c798
                        ]
                      )
                    ]
    where a5705 := <pp-one-Z(prettyprint-Term)> a
    where b2921 := <pp-one-Z(prettyprint-Id)> b
    where c798 := <pp-one-Z(prettyprint-Pattern)> c

  prettyprint-Prop :
    Eq(a, b) -> [ H(
                    [SOpt(HS(), "0")]
                  , [a5706, S(" == "), b2922]
                  )
                ]
    where a5706 := <pp-one-Z(prettyprint-Term)> a
    where b2922 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Prop :
    Match(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a5707, S(" => "), b2923]
                     )
                   ]
    where a5707 := <pp-one-Z(prettyprint-Term)> a
    where b2923 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Bind(a, b) -> [ H(
                      [SOpt(HS(), "0")]
                    , [a5708, S(" bind "), b2924]
                    )
                  ]
    where a5708 := <pp-one-Z(prettyprint-Term)> a
    where b2924 := <pp-one-Z(prettyprint-Var)> b

  prettyprint-Prop :
    Project(a, b) -> [ H(
                         [SOpt(HS(), "0")]
                       , [a5709, S(" project "), b2925]
                       )
                     ]
    where a5709 := <pp-one-Z(prettyprint-VarRef)> a
    where b2925 := <pp-one-Z(prettyprint-Pattern)> b

  prettyprint-Prop :
    Return(a) -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("return "), a5710]
                   )
                 ]
    where a5710 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-example =
    prettyprint-Prop


strategies
  prettyprint-PropPattern :
    HasTypePat(a, b) -> [ H(
                            [SOpt(HS(), "0")]
                          , [a5711, S(" : "), b2926]
                          )
                        ]
    where a5711 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b2926 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-PropPattern :
    HasPat(a, b, c) -> [ H(
                           [SOpt(HS(), "0")]
                         , [ a5712
                           , S(" has ")
                           , b2927
                           , S(" ")
                           , c799
                           ]
                         )
                       ]
    where a5712 := <pp-H-list(prettyprint-Pattern|" + ")> a
    where b2927 := <pp-one-Z(prettyprint-Id)> b
    where c799 := <pp-one-Z(prettyprint-Term)> c

  prettyprint-PropPattern :
    IsWF(a) -> [ H(
                   [SOpt(HS(), "0")]
                 , [a5713, S(" :-")]
                 )
               ]
    where a5713 := <pp-H-list(prettyprint-Pattern|" + ")> a

  prettyprint-example =
    prettyprint-PropPattern


strategies
  prettyprint-Term :
    DefOf(a) -> [ H(
                    [SOpt(HS(), "0")]
                  , [S("definition of "), a5714]
                  )
                ]
    where a5714 := <pp-one-Z(prettyprint-Term)> a

  prettyprint-Term :
    Union(a, b) -> [ H(
                       [SOpt(HS(), "0")]
                     , [a5715, S(" union "), b2928]
                     )
                   ]
    where a5715 := <pp-one-Z(prettyprint-Term)> a
    where b2928 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-Term :
    Choice(a, b) -> [ H(
                        [SOpt(HS(), "0")]
                      , [a5716, S(" or "), b2929]
                      )
                    ]
    where a5716 := <pp-one-Z(prettyprint-Term)> a
    where b2929 := <pp-one-Z(prettyprint-Term)> b

  prettyprint-example =
    prettyprint-Term


strategies
  prettyprint-Id :
    () -> [ H(
              [SOpt(HS(), "0")]
            , [S("where")]
            )
          ]

  prettyprint-example =
    prettyprint-Id