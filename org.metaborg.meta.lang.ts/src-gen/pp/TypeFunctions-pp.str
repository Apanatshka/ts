module src-gen/pp/TypeFunctions-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  src-gen/signatures/TypeFunctions-sig


imports
  src-gen/signatures/common/Identifiers-sig
  src-gen/signatures/terms/Terms-sig
  src-gen/signatures/TypeSystemLanguage-sig


imports
  src-gen/pp/common/Identifiers-pp
  src-gen/pp/terms/Terms-pp
  src-gen/pp/TypeSystemLanguage-pp


strategies
  prettyprint-example =
    prettyprint-ModuleSection

  prettyprint-example =
    prettyprint-TypeFunction

  prettyprint-example =
    prettyprint-Prop

  prettyprint-ModuleSection :
    TypeFunctions(t0__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("type functions "), t0__']
                             )
                           ]
    with t0__' := <pp-H-list(prettyprint-TypeFunction)> t0__

  is-ModuleSection =
    ?TypeFunctions(_)

  prettyprint-TypeFunction :
    TypeFunctionUnCond(t0__, t1__, t2__) -> [ H(
                                                [SOpt(HS(), "0")]
                                              , [ t0__'
                                                , S(" : ")
                                                , t1__'
                                                , S(" -> ")
                                                , t2__'
                                                ]
                                              )
                                            ]
    with t0__' := <pp-one-Z(prettyprint-Id)> t0__
    with t1__' := <pp-one-Z(prettyprint-Pattern)> t1__
    with t2__' := <pp-one-Z(prettyprint-Term)> t2__

  is-TypeFunction =
    ?TypeFunctionUnCond(_, _, _)

  prettyprint-TypeFunction :
    TypeFunction(t0__, t1__, t2__, t3__) -> [ H(
                                                [SOpt(HS(), "0")]
                                              , [ t0__'
                                                , S(" : ")
                                                , t1__'
                                                , S(" -> ")
                                                , t2__'
                                                , S(" where ")
                                                , t3__'
                                                ]
                                              )
                                            ]
    with t0__' := <pp-one-Z(prettyprint-Id)> t0__
    with t1__' := <pp-one-Z(prettyprint-Pattern)> t1__
    with t2__' := <pp-one-Z(prettyprint-Term)> t2__
    with t3__' := <pp-one-Z(prettyprint-Formula)> t3__

  is-TypeFunction =
    ?TypeFunction(_, _, _, _)

  prettyprint-Prop :
    FuncAppl(t0__, t1__, t2__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [ S("< ")
                                      , t0__'
                                      , S(" > ")
                                      , t1__'
                                      , S(" => ")
                                      , t2__'
                                      ]
                                    )
                                  ]
    with t0__' := <pp-one-Z(prettyprint-Id)> t0__
    with t1__' := <pp-one-Z(prettyprint-Term)> t1__
    with t2__' := <pp-one-Z(prettyprint-Pattern)> t2__

  is-Prop =
    ?FuncAppl(_, _, _)

  is-ModuleSection =
    fail

  is-TypeFunction =
    fail

  is-Prop =
    fail